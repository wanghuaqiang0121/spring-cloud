server:
  port: 5010
eureka:
  client:
    healthcheck:
      enabled: true #开启健康检查
    serviceUrl:
      # 注册到三个节点的两个节点上或则三个节点
      defaultZone: http://admin:123123@eureka1:8761/eureka/
    register-with-eureka: true #注册到eureka
    fetch-registry: true #获取注册表
  instance:
    # 定义服务续约任务（心跳:向eureka server发送）的调用间隔，单位：秒 默认为30，生产环境可适当缩小，正式环境不建议更改
    lease-renewal-interval-in-seconds: 30
    # 定义服务失效的时间，单位：秒
    lease-expiration-duration-in-seconds: 30 
    prefer-ip-address: true # 使用主机名来定义注册中心的地址
    instance-id: ${spring.cloud.client.ip-address}:${server.port}:${spring.application.name}
mybatis:
  configuration:
    call-setters-on-nulls: true # mybatis配置null映射
spring:
  application:
    name: server-users-security # 应用名称（service-id）
  jackson:
    #日期格式化
    date-format: yyyy-MM-dd HH:mm:ss # 指定日期格式，比如yyyy-MM-dd HH:mm:ss
    joda-date-time-format: yyyy-MM-dd HH:mm:ss# Joda-Time 指定日期格式
    time-zone: GMT+8 #指定日期格式化时区
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
    jdbc-url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf8&mysqlEncoding=utf8&autoReconnect=true&serverTimezone=GMT%2B8
    username: root
    password: 20170410
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: HikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
userfeign: server-user
server-user:
  ribbon:
    # 配置访问server-user的ribbon负载均衡策略为响应时间加权，根据responsetime分配一个weight
    # 响应时间越大 weight 越小，选中的可能就越小
    # WeightedResponseTimeRule 根据响应时间
    # RoundRobinRule 轮询
    # RandomRule 随机
    # BestAvailableRule 并发最小的
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule
