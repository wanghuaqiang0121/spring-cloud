<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.user.dao.OrganizationUserMapper">

	<!-- 机构用户详情 -->
	<select id="getOne" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			bou.id,
			bou.account,
			bou.birthday,
			bou.create_date createDate,
			bou.is_init_password isInitPassword,
			bou.`password`,
			bou.`name`,
			bou.phone,
			bou.phone_status phoneStatus,
			bou.photo,
			bou.remark,
			bou.sex,
			bou.`status`,
			bou.organization_person_type_id organizationPersonTypeId,
			bou.certificate_type certificateType,
			bou.certificate_number certificateNumber,
			bou.positive,
			bou.opposite,
			bopt.`name` personTypeName
		FROM
			base_organization_user bou
			LEFT JOIN base_organization_person_type bopt ON bou.organization_person_type_id=bopt.id
		WHERE 
		    bou.id=#{id}
	</select>
	
	<!-- 查询模块菜单列表 -->
	<select id="getOrganizationUserModuleMenuList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			bom.id,
			bom.`code`,
			bom.`name`,
			bom.pid,
			bom.remark,
			bom.icon,
			bom.sort,
			bom.type
		FROM
			base_organization_user_role bour
		INNER JOIN base_organization_role bor ON bor.id = bour.organization_role_id AND bor.organization_id = #{organizationId} 
			AND bor.system_module_id = #{moduleId} AND bor.`status` = 0
		INNER JOIN base_operational_role boRole ON boRole.id = bor.operational_role_id AND boRole.is_used = TRUE
		INNER JOIN base_operational_role_permission borp ON borp.operational_role_id = boRole.id
		INNER JOIN base_operational_permission bop ON bop.id = borp.operational_permission_id AND bop.is_used = TRUE
		INNER JOIN base_operational_permission_menu bopm ON bopm.operational_permission_id = bop.id
		INNER JOIN base_operational_menu bom ON bom.id = bopm.operational_menu_id AND bom.is_used = TRUE
		WHERE
			bour.organization_user_id = #{id} AND bour.`status`=0
		GROUP BY
			bom.id
		ORDER BY bom.sort,bom.id
	</select>
	<!-- 查询超级管理员模块菜单列表 -->
	<select id="getManagerModuleMenuList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			bom.id,
			bom.`code`,
			bom.`name`,
			bom.pid,
			bom.remark,
			bom.icon,
			bom.sort,
			bom.type
		FROM base_organization_role bor 
		INNER JOIN base_operational_role boRole ON boRole.id = bor.operational_role_id AND boRole.is_used = TRUE
		INNER JOIN base_operational_role_permission borp ON borp.operational_role_id = boRole.id
		INNER JOIN base_operational_permission bop ON bop.id = borp.operational_permission_id AND bop.is_used = TRUE 
		INNER JOIN base_operational_permission_menu bopm ON bopm.operational_permission_id = bop.id
		INNER JOIN base_operational_menu bom ON bom.id = bopm.operational_menu_id AND bom.is_used =TRUE
		WHERE  
			bor.organization_id = #{organizationId} AND bor.system_module_id =#{moduleId} AND bor.`status` = 0 
		GROUP BY bom.id
		ORDER BY bom.sort,bom.id
	</select>
	<!-- 查询模块角色列表 -->
	<select id="getOrganizationUserModuleRoleList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			boRole.id,
			boRole.`code`,
			boRole.`name`
		FROM
			base_organization_user_role bour
		INNER JOIN base_organization_role bor ON bor.id = bour.organization_role_id 
			AND bor.organization_id = #{organizationId} AND bor.system_module_id = #{moduleId} AND bor.`status` = 0
		INNER JOIN base_organization_module bom ON bom.system_module_id = bor.system_module_id 
			AND bom.organization_id = #{organizationId} AND bom.system_module_id = #{moduleId} AND bom.`status`= 0
		INNER JOIN base_operational_role boRole ON boRole.id = bor.operational_role_id AND boRole.is_used = TRUE
		WHERE bour.organization_user_id = #{id} AND bour.`status` = 0 
		GROUP BY boRole.id
	</select>
	<!-- 超级管理员角色列表 -->
	<select id="getManagerRoleList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			boRole.id,
			boRole.`code`,
			boRole.`name`
		FROM
			base_organization_role bor
		INNER JOIN base_operational_role boRole ON boRole.id = bor.operational_role_id AND boRole.is_used = TRUE
		INNER JOIN base_organization_module bom ON bom.system_module_id = bor.system_module_id 
			AND bom.organization_id = #{organizationId} AND bom.system_module_id = #{moduleId} AND bom.`status`= 0
		WHERE 
			bor.organization_id =#{organizationId} AND 
			bor.system_module_id = #{moduleId} AND 
			bor.`status` = 0 
		GROUP BY boRole.id
	</select>
	<!-- 查询模块权限列表 -->
	<select id="getOrganizationUserModulePermissionList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			bop.id,
			bop.`code`,
			bop.`name`
		FROM base_organization_user_role bour
		INNER JOIN base_organization_role bor ON bor.id = bour.organization_role_id AND bor.organization_id = #{organizationId} 
			AND bor.system_module_id =#{moduleId}  AND bor.`status` = 0 
		INNER JOIN base_organization_module bom ON bom.system_module_id = bor.system_module_id 
			AND bom.organization_id = #{organizationId} AND bom.system_module_id = #{moduleId} AND bom.`status`= 0
		INNER JOIN base_operational_role boRole ON boRole.id = bor.operational_role_id AND boRole.is_used = TRUE
		INNER JOIN base_operational_role_permission borp ON borp.operational_role_id = boRole.id
		INNER JOIN base_operational_permission bop ON bop.id = borp.operational_permission_id AND bop.is_used = TRUE
		WHERE 
			bour.organization_user_id = #{id} 
			AND bour.`status`=0
		GROUP BY bop.id
	</select>
	<!-- 查询超级管理员模块权限列表 -->
	<select id="getManagerPermissionList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			bop.id,
			bop.`code`,
			bop.`name`
		FROM base_organization_role bor 
		INNER JOIN base_organization_module bom ON bom.system_module_id = bor.system_module_id 
			AND bom.organization_id = #{organizationId} AND bom.system_module_id = #{moduleId} AND bom.`status`= 0
		INNER JOIN base_operational_role boRole ON boRole.id = bor.operational_role_id AND boRole.is_used = TRUE
		INNER JOIN base_operational_role_permission borp ON borp.operational_role_id = boRole.id
		INNER JOIN base_operational_permission bop ON bop.id = borp.operational_permission_id AND bop.is_used = TRUE
		WHERE     
			bor.organization_id = #{organizationId} AND 
			bor.system_module_id =#{moduleId} AND 
			bor.`status` = 0
		GROUP BY bop.id
	</select>
	<!-- 查询模块操作列表 -->
	<select id="getOrganizationUserModuleOperationList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			boo.id,
			boo.`code`,
			boo.`name`
		FROM base_organization_user_role bour
		INNER JOIN base_organization_role bor ON bor.id = bour.organization_role_id AND bor.organization_id = #{organizationId} 
			AND bor.system_module_id =#{moduleId}  AND bor.`status` = 0
		INNER JOIN base_organization_module bom ON bom.system_module_id = bor.system_module_id 
			AND bom.organization_id = #{organizationId} AND bom.system_module_id = #{moduleId} AND bom.`status`= 0
		INNER JOIN base_operational_role boRole ON boRole.id = bor.operational_role_id AND boRole.is_used = TRUE 
		INNER JOIN base_operational_role_permission borp ON borp.operational_role_id = boRole.id
		INNER JOIN base_operational_permission bop ON bop.id = borp.operational_permission_id AND bop.is_used = TRUE
		INNER JOIN base_operational_permission_operation bopo ON bopo.operational_permission_id = bop.id
		INNER JOIN base_operational_operation boo ON boo.id = bopo.operational_operation_id AND boo.is_used = TRUE
		WHERE 
			bour.organization_user_id = #{id} 
			AND bour.`status`=0
		GROUP BY boo.id
	</select>
	<!-- 查询超级管理员模块操作列表 -->
	<select id="getManagerOperationList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			boo.id,
			boo.`code`,
			boo.`name`
		FROM base_organization_role bor 
		INNER JOIN base_organization_module bom ON bom.system_module_id = bor.system_module_id 
			AND bom.organization_id = #{organizationId} AND bom.system_module_id = #{moduleId} AND bom.`status`= 0
		INNER JOIN base_operational_role boRole ON boRole.id = bor.operational_role_id AND boRole.is_used = TRUE 
		INNER JOIN base_operational_role_permission borp ON borp.operational_role_id = boRole.id
		INNER JOIN base_operational_permission bop ON bop.id = borp.operational_permission_id AND bop.is_used = TRUE 
		INNER JOIN base_operational_permission_operation bopo ON bopo.operational_permission_id = bop.id
		INNER JOIN base_operational_operation boo ON boo.id = bopo.operational_operation_id AND boo.is_used = TRUE
		WHERE 
			bor.organization_id = #{organizationId} 
			AND bor.system_module_id =#{moduleId} 
			AND bor.`status` = 0 
		GROUP BY boo.id
	</select>
		<!-- 获取R骨龄标准百分位数 -->
	<select id="getBoneAgeStandardPercentileList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			id,
			sex,
			type,
			bone_age AS boneAge,
			bone_age_fraction AS boneAgeFraction,
			percentile,
			ROUND(DEGREES(ASIN(CONVERT(SQRT(bone_age_fraction/1000),DECIMAL(12,3)))),2) AS coordinateValue
		FROM base_bone_age_standard_percentile
		WHERE type = #{type}
		<if test="sex != null">
			AND sex = #{sex}
		</if>
		<!-- <if test="boneAgeFraction != null">
			AND bone_age_fraction = #{boneAgeFraction}
		</if> -->
		<if test="percentile !=null and percentile !=''">
			AND percentile = #{percentile}
		</if>
		<!-- <if test="adjacentValues != null">
			AND BONE_AGE_FRACTION IS NOT NULL
			ORDER BY ABS(#{adjacentValues}-bone_age_fraction) ASC LIMIT 2
		</if> -->
	</select>
	<!-- 查询账号 -->
	<select id="getUserByAccount" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			ou.id,ou.`name`,ou.birthday,ou.is_init_password isInitPassword,ou.phone,ou.photo,ou.`status`,ou.sex,bo.`status` organizationStatus
		FROM
			base_organization_user ou
			INNER JOIN base_doctor_organization_department_duty bdodd ON ou.id = bdodd.organization_user_id
			INNER JOIN base_organization bo ON bo.id = bdodd.organization_id
		WHERE
			ou.account =#{account}
	</select>
	<!-- 查询账号和密码-->
	<select id="getUserByAccountAndPassword" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			ou.id,
			ou.`name`,
			ou.birthday,
			TIMESTAMPDIFF(YEAR, ou.birthday, CURDATE()) age,
			ou.is_init_password isInitPassword,
			ou.phone,
			ou.photo,
			ou.`status`,
			bdodd.`status` bdoddStatus,
			ou.sex,
			bo.id organizationId,
			bo.`status` organizationStatus 
		FROM
			base_organization_user ou
		INNER JOIN base_doctor_organization_department_duty bdodd ON ou.id = bdodd.organization_user_id 
		INNER JOIN base_organization bo ON bo.id = bdodd.organization_id 
		WHERE
			ou.account =#{account}
			AND ou.`password` =#{password}
	</select>
	
	<!-- 查询身份证-->
	<select id="getOrganizationUserCertificate" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			certificate_number certificateNumber,
			positive,
			opposite
		FROM
			base_organization_user_certificate 
		WHERE
			organization_user_id =#{id}
			AND certificate_type = #{certificateType}
	</select>
	
	
	<!-- 新增数据 -->
	<insert id="insert" parameterType="com.server.user.entity.OrganizationUser" useGeneratedKeys="true" keyProperty="id">
	INSERT INTO
		base_organization_user(name,birthday,phone,phone_status,photo,status,account,password,is_init_password,create_date,remark,sex,organization_person_type_id,certificate_type,certificate_number,positive,opposite)
	VALUES
		(#{name},#{birthday},#{phone},#{phoneStatus},#{photo},#{status},#{account},#{password},#{isInitPassword},#{createDate},#{remark},#{sex},#{organizationPersonTypeId},
		#{certificateType},#{certificateNumber},#{positive},#{opposite})
	</insert>
	<!--检查数据是否存在  -->
	<select id="getRepeat" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			bou.id,
			bou.account,
			bou.`status`,
			bou.is_init_password isInitPassword 
		FROM 
			base_organization_user bou 
		WHERE 
			bou.account=#{account}
	</select>
	<!-- 修改数据 -->
	<update id="update" parameterType="com.server.user.entity.OrganizationUser">
		UPDATE base_organization_user set id = #{id}
			<if test="name!=null and name!=''">
				,name = #{name}
			</if>
			<if test="sex!=null">
				, sex = #{sex}
			</if>
			<if test="birthday!=null ">
				,birthday = #{birthday}
			</if>
			<if test="phone!=null and phone!=''">
				,phone = #{phone}
			</if>
			<if test="photo!=null and photo!=''">
				,photo = #{photo}
			</if>
			<if test="status!=null">
				,status = #{status}
			</if>
			<if test="account!=null and account!=''">
				,account = #{account}
			</if>
			<if test="password!=null and password!=''">
				,password = #{password}
			</if>
			<if test="isInitPassword!=null ">
				,is_init_password = #{isInitPassword}
			</if>
			<if test="remark!=null and remark!=''">
				, remark = #{remark}
			</if>
			<if test="organizationPersonTypeId !=null">
			    ,organization_person_type_id=#{organizationPersonTypeId}
			</if>
		    <if test="certificateType !=null and certificateType !=''">
			    ,certificate_type=#{certificateType}
		    </if>
		    <if test="certificateNumber !=null and certificateNumber !=''">
		        ,certificate_number=#{certificateNumber}
		    </if>
		 	<if test="positive !=null and positive !=''">
		 		,positive=#{positive}
			</if>
		 	<if test="opposite !=null and opposite !=''">
		 		,opposite=#{opposite}
			</if>
		WHERE 
			id = #{id}
	</update>
	
	<resultMap type="map" id="organzationUserMap">
		<result column="organizationId" property="organizationId"/>
		<result column="organizationTypeId" property="organizationTypeId"/>
		<collection property="organizationPersonType" column="organizationTypeId" javaType="list" select="getOrganizationPersonType"/>
	</resultMap>
	<select id="getOrganizationPersonType" parameterType="int" resultType="map">
		SELECT
			botuc.organization_person_type_id organizationPersonTypeId,
			bopt.`code` organizationPersonTypeCode,
			bopt.`name` organizationPersonTypeName,
			bopt.interface_url organizationPersonTypeInterfaceUrl,
			bopt.create_date organizationPersonTypeCreateDate
		FROM
			base_organization_type_user_category botuc
		LEFT JOIN base_organization_person_type bopt ON bopt.id = botuc.organization_person_type_id
		WHERE
			botuc.organization_type_id = #{organizationTypeId}
	</select>
	
	<!--查询机构用户的机构列表  -->
	<select id="getOrganzationUserOrganzationList" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			bo.id organizationId,
			bo.`name` organizationName,
			bo.`code` organizationCode,
			bo.logo organizationLogo,
			bo.province,
			bo.city,
			bo.area,
			bo.street,
			bo.community,
			bo.address,
			bo.lng,
			bo.lat,
			bou.id organizationUserId,
			bo.organization_type_id organizationTypeId
		FROM
			base_organization_user bou
		LEFT JOIN base_doctor_organization_department_duty bdodd ON bou.id = bdodd.organization_user_id AND bdodd.`status` = 0
		LEFT JOIN base_organization bo ON bdodd.organization_id = bo.id
		WHERE
			bou.id =#{id}
	</select>
	
	<!-- 用于数据回传（杭创） -->
	<select id="getDataReturn" parameterType="com.server.user.entity.OrganizationUser" resultType="map">
		SELECT
			bdodd.id,
			bou.id oganizationUserId,
			bou.`name`,
			bo.id organizationId,
			bo.`name` organizationName,
			bo.`code`,
			bo.area_code areaCode,
			bo.pers_code persCode,
			bo.province,
			bo.city,
			bo.area,
			bo.street,
			bo.community,
			bmoi.nature,
			bdodd.work_number workNumber
		FROM
			base_doctor_organization_department_duty bdodd
		LEFT JOIN base_organization_user bou ON bou.id = bdodd.organization_user_id
		LEFT JOIN base_organization bo ON bdodd.organization_id = bo.id
		LEFT JOIN base_medical_organization_info bmoi ON bo.id = bmoi.organization_id
		WHERE
			bdodd.organization_user_id =#{id} and bdodd.organization_id=#{organizationId}
	</select>
</mapper>